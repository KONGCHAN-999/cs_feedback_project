"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const chalk_1 = __importDefault(require("chalk"));
const messages_1 = require("../messages");
const ReactPluginSystemPage_1 = require("../pages/ReactPluginSystemPage");
const OldPluginSystemPage_1 = require("../pages/OldPluginSystemPage");
const ControllerBase_1 = require("./ControllerBase");
const DETECT_PAGE_TIMEOUT_MS = 10000;
const NO_PRIVILEGE_STATUS_CODE = "CB_NO02";
class PluginSystemController extends ControllerBase_1.ControllerBase {
    getUI() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.ui) {
                return this.ui;
            }
            const isReactPage = yield this.isReactPage();
            this.ui = isReactPage
                ? new ReactPluginSystemPage_1.ReactPluginSystemPage()
                : new OldPluginSystemPage_1.OldPluginSystemPage();
            return this.ui;
        });
    }
    isReactPage() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                yield this.page.waitForSelector(OldPluginSystemPage_1.IMPORT_BUTTON_SELECTOR, {
                    timeout: DETECT_PAGE_TIMEOUT_MS,
                });
                return false;
            }
            catch (e) {
                return true;
            }
        });
    }
    goToPluginSystemPage(baseUrl) {
        return __awaiter(this, void 0, void 0, function* () {
            const pluginSystemPageUri = `${baseUrl}/k/admin/system/plugin/`;
            console.log(`Navigate to ${pluginSystemPageUri}`);
            return this.page.goto(pluginSystemPageUri);
        });
    }
    readyForUpload(options) {
        return __awaiter(this, void 0, void 0, function* () {
            const { baseUrl, userName, password, lang, basicAuth } = options;
            const boundMessage = (0, messages_1.getBoundMessage)(lang);
            yield this.login({
                baseUrl,
                userName,
                password,
                boundMessage,
                basicAuth,
            });
            const response = yield this.goToPluginSystemPage(baseUrl);
            if (!response ||
                (response.headers()["x-cybozu-error"] &&
                    response.headers()["x-cybozu-error"] === NO_PRIVILEGE_STATUS_CODE)) {
                throw chalk_1.default.red(boundMessage("Error_adminPrivilege"));
            }
            yield (yield this.getUI()).readyForImportButton(this.page, boundMessage);
        });
    }
    upload(pluginPath, lang) {
        return __awaiter(this, void 0, void 0, function* () {
            yield (yield this.getUI()).upload(this.page, pluginPath, lang);
        });
    }
}
exports.default = PluginSystemController;
//# sourceMappingURL=PluginSystemController.js.map