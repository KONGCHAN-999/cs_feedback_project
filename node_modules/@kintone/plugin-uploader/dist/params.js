"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.inquireParams = void 0;
const messages_1 = require("./messages");
const params_1 = require("./prompts/params");
const isSet = (v) => typeof v === "string" && v;
const inquireParams = (_a) => __awaiter(void 0, [_a], void 0, function* ({ username, password, baseUrl, lang, }) {
    const m = (0, messages_1.getBoundMessage)(lang);
    const _baseUrl = isSet(baseUrl) ? baseUrl : yield (0, params_1.promptForBaseUrl)(m);
    const _username = isSet(username) ? username : yield (0, params_1.promptForUsername)(m);
    const _password = isSet(password) ? password : yield (0, params_1.promptForPassword)(m);
    return {
        baseUrl: _baseUrl,
        username: _username,
        password: _password,
    };
});
exports.inquireParams = inquireParams;
//# sourceMappingURL=params.js.map